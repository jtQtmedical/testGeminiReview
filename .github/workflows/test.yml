name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: [self-hosted, Linux, ARM64]

    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install
    
    - name: Create Docker network
      run: |
        docker network create todo-test-network || true
    
    - name: Start MySQL container
      run: |
        # 確保沒有已存在的同名容器
        docker rm -f todo-mysql-test || true
        
        # 使用具名網絡啟動 MySQL 容器
        docker run -d \
          --name todo-mysql-test \
          --network todo-test-network \
          --platform linux/arm64 \
          -e MYSQL_ROOT_PASSWORD=password \
          -e MYSQL_DATABASE=todo_test_db \
          -e MYSQL_ROOT_HOST="%" \
          mysql:latest
        
        # 等待 MySQL 啟動
        echo "等待 MySQL 啟動..."
        sleep 10
        
        # 使用 docker exec 檢查服務是否就緒
        MAX_RETRY=30
        COUNTER=0
        until docker exec todo-mysql-test mysql -uroot -ppassword -e "SELECT 1" >/dev/null 2>&1
        do
          COUNTER=$((COUNTER+1))
          if [ $COUNTER -gt $MAX_RETRY ]; then
            echo "MySQL 啟動超時，放棄等待"
            exit 1
          fi
          echo "等待 MySQL 準備就緒... ($COUNTER/$MAX_RETRY)"
          sleep 2
        done
        echo "MySQL 已準備就緒"
        
        # 獲取 MySQL 容器 IP 地址
        MYSQL_IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' todo-mysql-test)
        echo "MySQL 容器 IP: $MYSQL_IP"
        echo "MYSQL_HOST=$MYSQL_IP" >> $GITHUB_ENV
    
    - name: Setup test data
      run: npm run setup-test-data
      env:
        NODE_ENV: test
        DB_HOST: ${{ env.MYSQL_HOST }}
        DB_USER: root
        DB_PASSWORD: password
        DB_NAME: todo_test_db
    
    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        DB_HOST: ${{ env.MYSQL_HOST }}
        DB_USER: root
        DB_PASSWORD: password
        DB_NAME: todo_test_db
    
    - name: Cleanup
      if: always()
      run: |
        docker rm -f todo-mysql-test || true
        docker network rm todo-test-network || true